
;; (print-dot '(1 2 3 4 5))
;; (1 . (2 . (3 . (4 . (5 . ())))))

(define (print-dot ls)
  (if (null? ls)
      (display '())
      (begin
        (display "(")
        (if (list? (car ls))
            (print-dot (car ls))
            (display (car ls)))
        (display " . ")
        (print-dot (cdr ls))
        (display ")"))))

(print-dot '(1 2 3 4 5))
;; (1 . (2 . (3 . (4 . (5 . ())))))#<undef>
(print-dot '(1 2 3 (4 5 6)))
;; (1 . (2 . (3 . ((4 . (5 . (6 . ()))) . ()))))#<undef>
(print-dot '(1 2 3 (4 5 () 6)(7 (8 (9 (((10) 11)) 12))) 13 14 (15)))
;; (1 . (2 . (3 . ((4 . (5 . (() . (6 . ())))) . ((7 . ((8 . ((9 . ((((10 . ()) . (11 . ())) . ()) . (12 . ()))) . ())) . ())) . (13 . (14 . ((15 . ()) . ()))))))))#<undef>


(define (print-dot ls)
  (if (null? ls)
      (display '())
      (for-each (lambda (e)
                  ((if (list? e)
                       print-dot
                       display) e))
                `("(" ,(car ls) " . " ,(cdr ls) ")"))))

(print-dot '(1 2 3 4 5))
;; (1 . (2 . (3 . (4 . (5 . ())))))#<undef>
(print-dot '(1 2 3 (4 5 6)))
;; (1 . (2 . (3 . ((4 . (5 . (6 . ()))) . ()))))#<undef>
(print-dot '(1 2 3 (4 5 () 6)(7 (8 (9 (((10) 11)) 12))) 13 14 (15)))
;; (1 . (2 . (3 . ((4 . (5 . (() . (6 . ())))) . ((7 . ((8 . ((9 . ((((10 . ()) . (11 . ())) . ()) . (12 . ()))) . ())) . ())) . (13 . (14 . ((15 . ()) . ()))))))))#<undef>




